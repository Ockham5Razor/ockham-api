// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/email-validations/any/validating": {
            "put": {
                "description": "Validate a user's email",
                "tags": [
                    "auth"
                ],
                "summary": "ValidateEmail",
                "parameters": [
                    {
                        "description": "Email validation from",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ValidateEmailJsonForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/sessions": {
            "post": {
                "description": "Login as a user",
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login json form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LoginJsonForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/sessions/any/renewing": {
            "put": {
                "description": "Keep login status as a user.",
                "tags": [
                    "auth"
                ],
                "summary": "Keep login status",
                "parameters": [
                    {
                        "description": "session renewal form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RenewSessionForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/users": {
            "post": {
                "description": "Register to create a user",
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "CreateUser from",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RegisterJsonForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/recharge-codes/none/batch-generations": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generate Recharge Codes in Batches",
                "tags": [
                    "recharge_code"
                ],
                "summary": "Generate Recharge Codes in Batches",
                "parameters": [
                    {
                        "description": "Generating recharge code from",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RechargeCodeGeneratingJsonForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/service-plans": {
            "get": {
                "description": "Get all service plans",
                "tags": [
                    "market"
                ],
                "summary": "Get all service plans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create service plan",
                "tags": [
                    "market"
                ],
                "summary": "Create service plan",
                "parameters": [
                    {
                        "description": "Create service plan form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ServicePlanForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/service-plan-subscriptions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List service plan subscriptions",
                "tags": [
                    "market"
                ],
                "summary": "List service plan subscriptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Subscribe service plan",
                "tags": [
                    "market"
                ],
                "summary": "Subscribe service plan",
                "parameters": [
                    {
                        "description": "Subscribe service plan form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SubscribeServicePlanForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/wallet": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get wallet info",
                "tags": [
                    "wallet"
                ],
                "summary": "Get wallet info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/wallet/recharging": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Register to create a user",
                "tags": [
                    "wallet"
                ],
                "summary": "Recharge",
                "parameters": [
                    {
                        "description": "Recharge form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RechargeForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/wallet/records": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get wallet records",
                "tags": [
                    "wallet"
                ],
                "summary": "Get wallet records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "util.Meta": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "util.Pack": {
            "type": "object",
            "properties": {
                "Meta": {
                    "$ref": "#/definitions/util.Meta"
                },
                "data": {}
            }
        },
        "v1.LoginJsonForm": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v1.RechargeCodeGeneratingJsonForm": {
            "type": "object",
            "properties": {
                "batchCount": {
                    "type": "integer"
                },
                "packageName": {
                    "type": "string"
                },
                "rechargeAmount": {
                    "type": "number"
                }
            }
        },
        "v1.RechargeForm": {
            "type": "object",
            "properties": {
                "rechargeCode": {
                    "type": "string"
                }
            }
        },
        "v1.RegisterJsonForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v1.RenewSessionForm": {
            "type": "object",
            "properties": {
                "renewalKey": {
                    "type": "string"
                }
            }
        },
        "v1.ServicePlanForm": {
            "type": "object",
            "properties": {
                "cyclicalLastingDays": {
                    "description": "循环周期",
                    "type": "integer"
                },
                "cyclicalTrafficBytes": {
                    "description": "每次循环的流量大小",
                    "type": "integer"
                },
                "description": {
                    "description": "描述",
                    "type": "string"
                },
                "enabled": {
                    "description": "启用中",
                    "type": "boolean"
                },
                "inheritSurplusTraffic": {
                    "description": "循环中继承结余流量",
                    "type": "boolean"
                },
                "priceForEachCycle": {
                    "description": "每次循环价格",
                    "type": "number"
                },
                "title": {
                    "description": "标题",
                    "type": "string"
                },
                "totalCycleTimes": {
                    "description": "总循环次数",
                    "type": "integer"
                }
            }
        },
        "v1.SubscribeServicePlanForm": {
            "type": "object",
            "properties": {
                "consolidateBillings": {
                    "description": "合并账单一次结清",
                    "type": "boolean"
                },
                "servicePlanId": {
                    "type": "integer"
                }
            }
        },
        "v1.ValidateEmailJsonForm": {
            "type": "object",
            "properties": {
                "validatorCode": {
                    "type": "string"
                },
                "validatorKey": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "Gol-C API",
	Description: "All APIs of Gol-C Project",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
