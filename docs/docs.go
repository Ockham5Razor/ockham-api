// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/agents/{agent_id}/config": {
            "get": {
                "tags": [
                    "agent"
                ],
                "summary": "GetAgentConfig",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "agent id",
                        "name": "agent_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.V2RayConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/agents/{agent_id}/pulse": {
            "put": {
                "tags": [
                    "agent"
                ],
                "summary": "AgentPulse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "agent id",
                        "name": "agent_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/email-validations/any/validating": {
            "put": {
                "tags": [
                    "auth"
                ],
                "summary": "ValidateEmail",
                "parameters": [
                    {
                        "description": "Email validation from",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ValidateEmailJsonForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/sessions": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login json form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LoginJsonForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/sessions/any/renewing": {
            "put": {
                "tags": [
                    "auth"
                ],
                "summary": "Keep login status",
                "parameters": [
                    {
                        "description": "session renewal form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RenewSessionForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/users": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "CreateUser from",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RegisterJsonForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Current User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/users/{user_id}/roles": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Grant Role",
                "parameters": [
                    {
                        "description": "GrantRoleForm from",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.GrantRoleForm"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/auth/users/{user_id}/roles/{role_id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Revoke Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "role id",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/recharge-codes/none/batch-generations": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "recharge_code"
                ],
                "summary": "Generate Recharge Codes in Batches",
                "parameters": [
                    {
                        "description": "Generating recharge code from",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RechargeCodeGeneratingJsonForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/service-plans": {
            "get": {
                "description": "Get all service plans",
                "tags": [
                    "market"
                ],
                "summary": "Get all service plans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create service plan",
                "tags": [
                    "market"
                ],
                "summary": "Create service plan",
                "parameters": [
                    {
                        "description": "Create service plan form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.ServicePlanForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/service-plans/{service_plan_id}": {
            "get": {
                "description": "Get service plan",
                "tags": [
                    "market"
                ],
                "summary": "Get service plan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "service plan id",
                        "name": "service_plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/service-plan-subscriptions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List service plan subscriptions",
                "tags": [
                    "market"
                ],
                "summary": "List service plan subscriptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Subscribes service plan",
                "tags": [
                    "market"
                ],
                "summary": "Subscribes service plan",
                "parameters": [
                    {
                        "description": "Subscribes service plan form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SubscribeServicePlanForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/service-plan-subscriptions/{service_plan_subscription_id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get service plan subscriptions",
                "tags": [
                    "market"
                ],
                "summary": "Get service plan subscriptions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "service plan subscriptions id",
                        "name": "service_plan_subscription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/wallet": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get wallet info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/wallet/recharging": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Recharge",
                "parameters": [
                    {
                        "description": "Recharge form",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RechargeForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        },
        "/v1/users/me/wallet/records": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get wallet records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.Pack"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "form.ServicePlanForm": {
            "type": "object",
            "properties": {
                "availableTrafficPlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "bundledTrafficPlanID": {
                    "type": "integer"
                },
                "planDescription": {
                    "description": "描述",
                    "type": "string"
                },
                "planEnabled": {
                    "description": "启用中",
                    "type": "boolean"
                },
                "planPrice": {
                    "type": "number"
                },
                "planTitle": {
                    "description": "标题",
                    "type": "string"
                },
                "servingDays": {
                    "type": "integer"
                }
            }
        },
        "model.V2RayConfig": {
            "type": "object",
            "properties": {
                "api": {
                    "$ref": "#/definitions/v2ray.ConfApi"
                },
                "inbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2ray.ConfInboundsItem"
                    }
                },
                "log": {
                    "$ref": "#/definitions/v2ray.ConfLog"
                },
                "outbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2ray.ConfOutboundsItem"
                    }
                },
                "policy": {
                    "$ref": "#/definitions/v2ray.ConfPolicy"
                },
                "routing": {
                    "$ref": "#/definitions/v2ray.ConfRouting"
                },
                "stats": {
                    "description": "流量统计，存在即启用 https://www.v2ray.com/chapter_02/stats.html",
                    "type": "object"
                }
            }
        },
        "util.Meta": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "util.Pack": {
            "type": "object",
            "properties": {
                "body": {},
                "meta": {
                    "$ref": "#/definitions/util.Meta"
                }
            }
        },
        "v1.GrantRoleForm": {
            "type": "object",
            "properties": {
                "roleID": {
                    "type": "integer"
                }
            }
        },
        "v1.LoginJsonForm": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v1.RechargeCodeGeneratingJsonForm": {
            "type": "object",
            "properties": {
                "batchCount": {
                    "type": "integer"
                },
                "packageName": {
                    "type": "string"
                },
                "rechargeAmount": {
                    "type": "number"
                }
            }
        },
        "v1.RechargeForm": {
            "type": "object",
            "properties": {
                "rechargeCode": {
                    "type": "string"
                }
            }
        },
        "v1.RegisterJsonForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v1.RenewSessionForm": {
            "type": "object",
            "properties": {
                "renewalKey": {
                    "type": "string"
                }
            }
        },
        "v1.SubscribeServicePlanForm": {
            "type": "object",
            "properties": {
                "consolidateBillings": {
                    "description": "合并账单一次结清",
                    "type": "boolean"
                },
                "servicePlanId": {
                    "type": "integer"
                }
            }
        },
        "v1.ValidateEmailJsonForm": {
            "type": "object",
            "properties": {
                "validatorCode": {
                    "type": "string"
                },
                "validatorKey": {
                    "type": "string"
                }
            }
        },
        "v2ray.ConfApi": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "v2ray.ConfInboundsItem": {
            "type": "object",
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/v2ray.ConfInboundsItemAllocate"
                },
                "listen": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "$ref": "#/definitions/v2ray.InboundProtocol"
                },
                "settings": {},
                "sniffing": {
                    "$ref": "#/definitions/v2ray.ConfInboundsItemSniffing"
                },
                "streamSettings": {
                    "$ref": "#/definitions/v2ray.ConfInboundsItemStreamSettings"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "v2ray.ConfInboundsItemAllocate": {
            "type": "object",
            "properties": {
                "concurrency": {
                    "type": "integer"
                },
                "refresh": {
                    "type": "integer"
                },
                "strategy": {
                    "type": "string"
                }
            }
        },
        "v2ray.ConfInboundsItemSniffing": {
            "type": "object",
            "properties": {
                "destOverride": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "v2ray.ConfInboundsItemStreamSettings": {
            "type": "object",
            "properties": {
                "network": {
                    "type": "string"
                },
                "wsSettings": {
                    "$ref": "#/definitions/v2ray.ConfInboundsItemStreamSettingsWsSettings"
                }
            }
        },
        "v2ray.ConfInboundsItemStreamSettingsWsSettings": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "v2ray.ConfLog": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "loglevel": {
                    "$ref": "#/definitions/v2ray.LogLevel"
                }
            }
        },
        "v2ray.ConfOutboundsItem": {
            "type": "object",
            "properties": {
                "protocol": {
                    "$ref": "#/definitions/v2ray.OutboundProtocol"
                },
                "settings": {
                    "type": "object"
                }
            }
        },
        "v2ray.ConfPolicy": {
            "type": "object",
            "properties": {
                "levels": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/v2ray.ConfPolicyLevelsValue"
                    }
                },
                "system": {
                    "$ref": "#/definitions/v2ray.ConfPolicySystem"
                }
            }
        },
        "v2ray.ConfPolicyLevelsValue": {
            "type": "object",
            "properties": {
                "StatsUserDownlink": {
                    "type": "boolean"
                },
                "bufferSize": {
                    "type": "integer"
                },
                "connIdle": {
                    "type": "integer"
                },
                "downlinkOnly": {
                    "type": "integer"
                },
                "handshake": {
                    "type": "integer"
                },
                "statsUserUplink": {
                    "type": "boolean"
                },
                "uplinkOnly": {
                    "type": "integer"
                }
            }
        },
        "v2ray.ConfPolicySystem": {
            "type": "object",
            "properties": {
                "statsInboundDownlink": {
                    "type": "boolean"
                },
                "statsInboundUplink": {
                    "type": "boolean"
                }
            }
        },
        "v2ray.ConfRouting": {
            "type": "object",
            "properties": {
                "setting": {
                    "$ref": "#/definitions/v2ray.ConfRoutingSetting"
                },
                "strategy": {
                    "type": "string"
                }
            }
        },
        "v2ray.ConfRoutingRulesItem": {
            "type": "object",
            "properties": {
                "inboundTag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outboundTag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v2ray.ConfRoutingSetting": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2ray.ConfRoutingRulesItem"
                    }
                }
            }
        },
        "v2ray.InboundProtocol": {
            "type": "string",
            "enum": [
                "vmess",
                "dokodemo-door"
            ],
            "x-enum-varnames": [
                "InboundProtocolVmess",
                "InboundProtocolDokodemoDoor"
            ]
        },
        "v2ray.LogLevel": {
            "type": "string",
            "enum": [
                "debug",
                "info",
                "warning",
                "error",
                "none"
            ],
            "x-enum-varnames": [
                "LogLevelDebug",
                "LogLevelInfo",
                "LogLevelWarning",
                "LogLevelError",
                "LogLevelNone"
            ]
        },
        "v2ray.OutboundProtocol": {
            "type": "string",
            "enum": [
                "freedom"
            ],
            "x-enum-varnames": [
                "OutboundProtocolFreedom"
            ]
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Ockham API",
	Description:      "All APIs of Ockham Project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
