basePath: /api
definitions:
  form.ServicePlanForm:
    properties:
      availableTrafficPlans:
        items:
          type: integer
        type: array
      bundledTrafficPlanID:
        type: integer
      planDescription:
        description: 描述
        type: string
      planEnabled:
        description: 启用中
        type: boolean
      planPrice:
        type: number
      planTitle:
        description: 标题
        type: string
      servingDays:
        type: integer
    type: object
  model.V2RayConfig:
    properties:
      api:
        $ref: '#/definitions/v2ray.ConfApi'
      inbounds:
        items:
          $ref: '#/definitions/v2ray.ConfInboundsItem'
        type: array
      log:
        $ref: '#/definitions/v2ray.ConfLog'
      outbounds:
        items:
          $ref: '#/definitions/v2ray.ConfOutboundsItem'
        type: array
      policy:
        $ref: '#/definitions/v2ray.ConfPolicy'
      routing:
        $ref: '#/definitions/v2ray.ConfRouting'
      stats:
        description: 流量统计，存在即启用 https://www.v2ray.com/chapter_02/stats.html
        type: object
    type: object
  util.Meta:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  util.Pack:
    properties:
      body: {}
      meta:
        $ref: '#/definitions/util.Meta'
    type: object
  v1.GrantRoleForm:
    properties:
      roleID:
        type: integer
    type: object
  v1.LoginJsonForm:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  v1.RechargeCodeGeneratingJsonForm:
    properties:
      batchCount:
        type: integer
      packageName:
        type: string
      rechargeAmount:
        type: number
    type: object
  v1.RechargeForm:
    properties:
      rechargeCode:
        type: string
    type: object
  v1.RegisterJsonForm:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  v1.RenewSessionForm:
    properties:
      renewalKey:
        type: string
    type: object
  v1.SubscribeServicePlanForm:
    properties:
      consolidateBillings:
        description: 合并账单一次结清
        type: boolean
      servicePlanId:
        type: integer
    type: object
  v1.ValidateEmailJsonForm:
    properties:
      validatorCode:
        type: string
      validatorKey:
        type: string
    type: object
  v2ray.ConfApi:
    properties:
      services:
        items:
          type: string
        type: array
      tag:
        type: string
    type: object
  v2ray.ConfInboundsItem:
    properties:
      allocate:
        $ref: '#/definitions/v2ray.ConfInboundsItemAllocate'
      listen:
        type: string
      port:
        type: integer
      protocol:
        $ref: '#/definitions/v2ray.InboundProtocol'
      settings: {}
      sniffing:
        $ref: '#/definitions/v2ray.ConfInboundsItemSniffing'
      streamSettings:
        $ref: '#/definitions/v2ray.ConfInboundsItemStreamSettings'
      tag:
        type: string
    type: object
  v2ray.ConfInboundsItemAllocate:
    properties:
      concurrency:
        type: integer
      refresh:
        type: integer
      strategy:
        type: string
    type: object
  v2ray.ConfInboundsItemSniffing:
    properties:
      destOverride:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  v2ray.ConfInboundsItemStreamSettings:
    properties:
      network:
        type: string
      wsSettings:
        $ref: '#/definitions/v2ray.ConfInboundsItemStreamSettingsWsSettings'
    type: object
  v2ray.ConfInboundsItemStreamSettingsWsSettings:
    properties:
      headers:
        additionalProperties:
          type: string
        type: object
      path:
        type: string
    type: object
  v2ray.ConfLog:
    properties:
      access:
        type: string
      error:
        type: string
      loglevel:
        $ref: '#/definitions/v2ray.LogLevel'
    type: object
  v2ray.ConfOutboundsItem:
    properties:
      protocol:
        $ref: '#/definitions/v2ray.OutboundProtocol'
      settings:
        type: object
    type: object
  v2ray.ConfPolicy:
    properties:
      levels:
        additionalProperties:
          $ref: '#/definitions/v2ray.ConfPolicyLevelsValue'
        type: object
      system:
        $ref: '#/definitions/v2ray.ConfPolicySystem'
    type: object
  v2ray.ConfPolicyLevelsValue:
    properties:
      StatsUserDownlink:
        type: boolean
      bufferSize:
        type: integer
      connIdle:
        type: integer
      downlinkOnly:
        type: integer
      handshake:
        type: integer
      statsUserUplink:
        type: boolean
      uplinkOnly:
        type: integer
    type: object
  v2ray.ConfPolicySystem:
    properties:
      statsInboundDownlink:
        type: boolean
      statsInboundUplink:
        type: boolean
    type: object
  v2ray.ConfRouting:
    properties:
      setting:
        $ref: '#/definitions/v2ray.ConfRoutingSetting'
      strategy:
        type: string
    type: object
  v2ray.ConfRoutingRulesItem:
    properties:
      inboundTag:
        items:
          type: string
        type: array
      outboundTag:
        type: string
      type:
        type: string
    type: object
  v2ray.ConfRoutingSetting:
    properties:
      rules:
        items:
          $ref: '#/definitions/v2ray.ConfRoutingRulesItem'
        type: array
    type: object
  v2ray.InboundProtocol:
    enum:
    - vmess
    - dokodemo-door
    type: string
    x-enum-varnames:
    - InboundProtocolVmess
    - InboundProtocolDokodemoDoor
  v2ray.LogLevel:
    enum:
    - debug
    - info
    - warning
    - error
    - none
    type: string
    x-enum-varnames:
    - LogLevelDebug
    - LogLevelInfo
    - LogLevelWarning
    - LogLevelError
    - LogLevelNone
  v2ray.OutboundProtocol:
    enum:
    - freedom
    type: string
    x-enum-varnames:
    - OutboundProtocolFreedom
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: All APIs of Ockham Project
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ockham API
  version: "1.0"
paths:
  /v1/agents/{agent_id}/config:
    get:
      parameters:
      - description: agent id
        in: path
        name: agent_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.V2RayConfig'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      summary: GetAgentConfig
      tags:
      - agent
  /v1/agents/{agent_id}/pulse:
    put:
      parameters:
      - description: agent id
        in: path
        name: agent_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      summary: AgentPulse
      tags:
      - agent
  /v1/auth/email-validations/any/validating:
    put:
      parameters:
      - description: Email validation from
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.ValidateEmailJsonForm'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/util.Pack'
      summary: ValidateEmail
      tags:
      - auth
  /v1/auth/sessions:
    post:
      parameters:
      - description: Login json form
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.LoginJsonForm'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Pack'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      summary: Login
      tags:
      - auth
  /v1/auth/sessions/any/renewing:
    put:
      parameters:
      - description: session renewal form
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.RenewSessionForm'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Pack'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      summary: Keep login status
      tags:
      - auth
  /v1/auth/users:
    post:
      parameters:
      - description: CreateUser from
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.RegisterJsonForm'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      summary: Register
      tags:
      - auth
  /v1/auth/users/{user_id}/roles:
    post:
      parameters:
      - description: GrantRoleForm from
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.GrantRoleForm'
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Grant Role
      tags:
      - auth
  /v1/auth/users/{user_id}/roles/{role_id}:
    delete:
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: role id
        in: path
        name: role_id
        required: true
        type: integer
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Revoke Role
      tags:
      - auth
  /v1/auth/users/me:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Get Current User
      tags:
      - auth
  /v1/recharge-codes/none/batch-generations:
    post:
      parameters:
      - description: Generating recharge code from
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.RechargeCodeGeneratingJsonForm'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Generate Recharge Codes in Batches
      tags:
      - recharge_code
  /v1/service-plans:
    get:
      description: Get all service plans
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
      summary: Get all service plans
      tags:
      - market
    post:
      description: Create service plan
      parameters:
      - description: Create service plan form
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/form.ServicePlanForm'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Create service plan
      tags:
      - market
  /v1/service-plans/{service_plan_id}:
    get:
      description: Get service plan
      parameters:
      - description: service plan id
        in: path
        name: service_plan_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
      summary: Get service plan
      tags:
      - market
  /v1/users/me/service-plan-subscriptions:
    get:
      description: List service plan subscriptions
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: List service plan subscriptions
      tags:
      - market
    post:
      description: Subscribes service plan
      parameters:
      - description: Subscribes service plan form
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.SubscribeServicePlanForm'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Subscribes service plan
      tags:
      - market
  /v1/users/me/service-plan-subscriptions/{service_plan_subscription_id}:
    get:
      description: Get service plan subscriptions
      parameters:
      - description: service plan subscriptions id
        in: path
        name: service_plan_subscription_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/util.Pack'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Get service plan subscriptions
      tags:
      - market
  /v1/users/me/wallet:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Get wallet info
      tags:
      - wallet
  /v1/users/me/wallet/recharging:
    put:
      parameters:
      - description: Recharge form
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/v1.RechargeForm'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Pack'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/util.Pack'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Recharge
      tags:
      - wallet
  /v1/users/me/wallet/records:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Pack'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Pack'
      security:
      - Bearer: []
      summary: Get wallet records
      tags:
      - wallet
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
